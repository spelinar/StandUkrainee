{
  "root": true,
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parser": "@typescript-eslint/parser",
      "plugins": [
        "@typescript-eslint"
      ],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/ng-cli-compat",
        "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/no-host-metadata-property": [
          "error",
          {
            "allowStatic": true
          }
        ],
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": "off",
        "@typescript-eslint/explicit-member-accessibility": [
          "off",
          {
            "accessibility": "explicit"
          }
        ],
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": [
              "camelCase"
            ]
          },
          {
            "selector": "variable",
            "format": [
              "camelCase",
              "PascalCase",
              "UPPER_CASE"
            ]
          },
          {
            "selector": "property",
            "format": [
              "camelCase",
              "PascalCase",
              "snake_case",
              "UPPER_CASE"
            ],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "memberLike",
            "format": [
              "camelCase",
              "PascalCase",
              "snake_case",
              "UPPER_CASE"
            ],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "parameter",
            "format": [
              "camelCase",
              "UPPER_CASE"
            ],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "function",
            "format": [
              "camelCase",
              "PascalCase"
            ],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": [
              "PascalCase",
              "UPPER_CASE"
            ]
          }
        ],
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "String": false,
              "Boolean": false,
              "Number": false,
              "Symbol": false,
              "{}": false,
              "Object": false,
              "object": false,
              "Function": false
            },
            "extendDefaults": true
          }
        ],
        "@typescript-eslint/no-unused-expressions": "off",
        "@typescript-eslint/prefer-for-of": "off",
        "@angular-eslint/no-output-on-prefix": "off",
        "@angular-eslint/no-output-native": "off",
        "brace-style": "off",
        "@typescript-eslint/brace-style": ["error", "1tbs"],
        "id-blacklist": "off",
        "id-match": "off",
        "import/order": [
          "error",
          {
            "groups": [
              "builtin",
              "external",
              "parent",
              "sibling",
              "index"
            ],
            "newlines-between": "always",
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": false
            }
          }
        ],
        "prefer-arrow/prefer-arrow-functions": [
          "error",
          {
            "disallowPrototype": true,
            "singleReturnOnly": false,
            "classPropertiesAllowed": false,
            "allowStandaloneDeclarations": true
          }
        ],
        "max-len": [
          "error",
          {
            "code": 140,
            "ignoreRegExpLiterals": true
          }
        ],
        "no-console": [
          "error",
          {
            "allow": [
              "clear",
              "error",
              "info",
              "warn"
            ]
          }
        ],
        "no-empty": "error",
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1
          }
        ],
        "no-redeclare": "off",
        "@typescript-eslint/no-redeclare": ["error"],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": ["error"],
        "no-throw-literal": "off",
        "no-underscore-dangle": "off",
        "indent": ["error", 2, {
          "SwitchCase": 1,
          "offsetTernaryExpressions": true
        }],
        "quotes": "off",
        "@typescript-eslint/quotes": ["error", "single"],
        "comma-dangle": "off",
        "@typescript-eslint/comma-dangle": ["error", {
          "functions": "never",
          "objects": "always-multiline",
          "arrays": "always-multiline",
          "imports": "always-multiline",
          "exports": "always-multiline",
          "enums": "always-multiline",
          "generics": "always-multiline",
          "tuples": "always-multiline"
        }],
        "comma-spacing": "off",
        "@typescript-eslint/comma-spacing": ["error"],
        "array-bracket-spacing": ["error", "never"],
        "object-curly-spacing": "off",
        "no-multi-spaces": ["error"],
        "semi": "off",
        "@typescript-eslint/semi": ["error", "always"],
        "arrow-parens": ["error", "always"],
        "eol-last": ["error", "always"],
        "newline-per-chained-call": ["error", {
          "ignoreChainWithDepth": 2
        }],
        "arrow-spacing": "error",
        "getter-return": "error",
        "no-dupe-args": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-empty-character-class": "error",
        "no-ex-assign": "error",
        "no-extra-boolean-cast": ["error", {
          "enforceForLogicalOperands": true
        }],
        "no-extra-semi": "off",
        "@typescript-eslint/no-extra-semi": ["error"],
        "no-func-assign": "error",
        "no-import-assign": "error",
        "no-inner-declarations": "error",
        "no-irregular-whitespace": "error",
        "no-misleading-character-class": "error",
        "no-obj-calls": "error",
        "no-setter-return": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-unexpected-multiline": "error",
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "use-isnan": "error",
        "valid-typeof": ["error", {
          "requireStringLiterals": true
        }],
        "guard-for-in": "error",
        "no-constructor-return": "error",
        "no-empty-pattern": "error",
        "no-global-assign": "error",
        "no-shadow-restricted-names": "error",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": ["error", {
          "argsIgnorePattern": "^_"
        }],
        "block-spacing": "error",
        "comma-style": ["error", "last"],
        "computed-property-spacing": ["error", "never"],
        "implicit-arrow-linebreak": ["error", "beside"],
        "key-spacing": ["error", {
          "beforeColon": false,
          "afterColon": true,
          "mode": "strict"
        }],
        "no-lonely-if": "error",
        "no-trailing-spaces": "error",
        "no-unneeded-ternary": "error",
        "no-whitespace-before-property": "error",
        "one-var-declaration-per-line": ["error", "always"],
        "padding-line-between-statements": [
          "error",
          { "blankLine": "always", "prev": "*", "next": ["return", "if", "switch", "for", "function", "try", "while"] },
          { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*"},
          { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"]}
        ],
        "space-infix-ops": "off",
        "@typescript-eslint/space-infix-ops": ["error", { "int32Hint": false }],
        "space-unary-ops": "error",
        "arrow-body-style": ["error", "as-needed"],
        "constructor-super": "error",
        "no-confusing-arrow": "error",
        "no-const-assign": "error",
        "no-duplicate-imports": "off",
        "@typescript-eslint/no-duplicate-imports": ["error"],
        "no-this-before-super": "error",
        "no-useless-computed-key": "error",
        "no-useless-rename": "error",
        "prefer-arrow-callback": [ "error", { "allowNamedFunctions": true } ],
        "prefer-template": "error",
        "@typescript-eslint/object-curly-spacing": ["error", "always"],
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/explicit-module-boundary-types": ["error", { "allowArgumentsExplicitlyTypedAsAny": true }],
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-reduce-type-parameter": "error",
        "@typescript-eslint/type-annotation-spacing": ["error",
          {
            "before": true,
            "after": true,
            "overrides": {
              "colon": {
                "before": false,
                "after": true
              }
            }
          }
        ],
        "default-param-last": "off",
        "@typescript-eslint/default-param-last": ["error"],
        "func-call-spacing": "off",
        "@typescript-eslint/func-call-spacing": ["error"],
        "no-array-constructor": "off",
        "@typescript-eslint/no-array-constructor": ["error"],
        "no-dupe-class-members": "off",
        "@typescript-eslint/no-dupe-class-members": ["error"],
        "no-extra-parens": "off",
        "@typescript-eslint/no-extra-parens": ["error", "all", { "enforceForArrowConditionals": false }],
        "no-implied-eval": "off",
        "@typescript-eslint/no-implied-eval": ["error"],
        "no-loop-func": "off",
        "@typescript-eslint/no-loop-func": ["error"],
        "no-loss-of-precision": "off",
        "@typescript-eslint/no-loss-of-precision": ["error"],
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": ["error"],
        "space-before-function-paren": "off",
        "@typescript-eslint/space-before-function-paren": ["error", {
          "anonymous": "always",
          "named": "never",
          "asyncArrow": "always"
        }],
        "space-in-parens": ["error", "never"],
        "space-before-blocks": "error",
        "keyword-spacing": "error",
        // TODO - integrate bellow rules
        "@typescript-eslint/prefer-includes": "off",
        "@typescript-eslint/prefer-optional-chain": "off",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/prefer-readonly": "off"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ]
}
